#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import print_function
from __future__ import unicode_literals

import argparse
import codecs
import sys

from gca.core import Abstract
from collections import OrderedDict


class LastUpdatedOrderedDict(OrderedDict):
    '''Store items in the order the keys were last added'''

    def __setitem__(self, key, value):
        if key in self:
            del self[key]
        OrderedDict.__setitem__(self, key, value)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='GCA Filter - filter list of abstract by files')
    parser.add_argument('files', type=str, nargs='+')
    args = parser.parse_args()

    abstracts = LastUpdatedOrderedDict()
    for f in args.files:
        fd = codecs.open(f, 'r', encoding='utf-8') if f != '-' else sys.stdin
        for a in Abstract.from_data(fd.read()):
            abstracts[a.uuid] = a
        fd.close()

    abstracts = [a for a in abstracts.values()]

    data = Abstract.to_json(abstracts)
    sys.stdout.write(data.encode('utf-8'))